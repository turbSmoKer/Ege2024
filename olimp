1)
d = int(input())
v1 = int(input())
v2 = int(input())
t = int(input())
s1 = v1 * t
s2 = v2 * t
x1 = s1 % d
x2 = s2 % d
if (max(x1, x2)-min(x1,x2))>=d/2:
    print(d-max(x1, x2)+min(x1, x2))
else:
    if x1>x2:
        print(x1-x2)
    else:
        print(x2-x1)

2)
n = int(input())
m = int(input())
k = int(input())
t = int(input())
c = m // k
c = c * k
m1 = m - c
if k - m1 < t:
    print(n-k+m1)
elif k - m1 > t:
    print(n)
elif k - m1 == t:
    print(n-t)

4)
n = int(input())
k = int(input())


et_kv = int(str(k)[0]) - 1
sch_kv_et = 0
sch_do_fin_kv = 0
et = 1
itog_kv_kv = 0


d = 1
d_nach = 1
fl = True
if d == k:
    print(1)
    fl = False

while fl:
    if d > n:
        itog_kv_kv = sch_kv_et
        sch_kv_et = 0
        et += 1
        d = d_nach + 1
        d_nach += 1
    elif d == k:
        print(itog_kv_kv * et_kv + sch_do_fin_kv)
        fl = False
        break
    else:
        sch_kv_et += 1
        sch_do_fin_kv += 1
        d = int(str(d) + str(et))
        


4.1)
n = int(input())
k = int(input())

et_kv = int(str(k)[0]) - 1
sch_kv_et = 0
sch_do_fin_kv = 0
et = 1
itog_kv_kv = 0

d = 1
d_nach = 1
fl = True
if d == k:
    print(1)
    fl = False
while fl:
        if d > n:
            sch_do_fin_kv = 1
            itog_kv_kv = sch_kv_et
            sch_kv_et = 0
            et += 1
            d = d_nach + 1
            d_nach += 1
        elif d == k:
            sch_kv_et += 1
            if sch_kv_et == itog_kv_kv:
                sch_do_fin_kv += 1
            print(itog_kv_kv * et_kv + sch_do_fin_kv)
            f1 = False
            break
        else:
            sch_kv_et += 1
            d = int(str(d) + str(et))



5)
m = int(input())  
k = int(input())  
strengths = [int(input()) for _ in range(m)] 

strengths.sort()  

min_strength_diff = float('inf')  
for i in range(m - k + 1):
    strength_diff = strengths[i + k - 1] - strengths[i]
    min_strength_diff = min(min_strength_diff, strength_diff)

print(min_strength_diff)
