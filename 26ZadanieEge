№1 (primer)
f = open('26.txt')
n = int(f.readline())
arr = []
for x in range(n):
  row, col = map(int, f.readline().split())
  arr.append((row, -col))
arr.sort(reverse=True)
prev_row = arr[0][0]
prev_col = abs(arr[0][1])
for i in range(1, n):
  row = arr[i][0]
  col = abs(arr[i][0])
  if row == prev_row and col - prev_col == 3:
    print(row, col - 2)
    break
  prev_row = row
  prev_col = col


№2 (жадный алгоритм) 
Смысл решения в прямом решении без разделения на варианты, тобишь единственная сортировка которая применима к жадному алгоритму это сортировка от max к min  либо наоборот
Яндекс ЕГЭ
Задание 26
Е.Джобс

(Сортировка с выбором подпоследовательности)

В магазине сотовой связи представлены смартфоны различной стоимости. Считается, что K самых дешёвых смартфонов относятся к бюджетному сегменту, а M самых дорогих — к премиум сегменту. По заданной информации о цене каждого из смартфонов определите цену самого дешёвого смартфона премиум сегмента, а также целую часть средней цены телефона из бюджетного сегмента.
Входные и выходные данные. В первой строке входного файла находятся три числа, записанные через пробел: N — общее количество смартфонов (натуральное число, не превышающее 10 000), K — количество смартфонов в бюджетном сегменте, M — количество смартфонов в премиум сегменте. В следующих N строках находятся стоимости каждого из смартфонов (все числа натуральные, не превышающие 30 000), каждое в отдельной строке.
Запишите в ответе два числа: сначала цену самого дешёвого смартфона премиум сегмента, а затем целую часть средней цены телефона из бюджетного сегмента.

flines = open('input.txt')
much = int(input())
seq = []
for line in lines:
    a, b = map(int, line.split())
    seq.append((a, b))
seq.sort(reverse=True)
k = 1
prev = seq[0]
h = True
for i in range(1, much):
    if prev[0] >= seq[i][0]:
        if h:
            ans = abs(seq[i][1] - prev[0])
        prev = seq[i]
        k += 1
print(seq)
print(k, ans)
№3

