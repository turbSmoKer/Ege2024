1)
from random import randint

lines = open('27b.txt')
n, k = map(int, lines.readline().split())
print(a1, a2)
aarr = []
counter = 0
for line in range(a1):
    aarr.append(int(lines.readline()))
def A(aar, n, k):
    left, right = 0, 0
    for u in aarr:
        for j in aarr:
            if left != right and j - u > k:
                counter += 1
            right += 1
        left += 1
    return counter
def B(aarr, n, k):
    couterB = 0
    right, left = 0, 0
    for left in range(n):
        while right < n and aarr[right] - aarr[left] <= k:
            right += 1
        counterB += n - right
    return couterB

#Стресс тест кода, при полной запутанности писать перебором пункт А, после писать пункт Б, после провести стресс тест функций на простой генерации теста

for t in range(1, 1000):
    n = int(input())
    k = int(input())
    aarr = []
    for i in range(n):
        aarr.append(randint(1, 30))
    aarr.sort()
    resA = A(aarr, n, k)
    resB = B(aarr, n, k)
    if resA != resB:
        print(n, k)
        print(aarr)
print('ok')

2)
f = open('26.txt')
n, k = map(int, f.readline().split())

seq = [
ps = [0] * (n + 1)
cnt = 0

for j in range(n):
    seq.append(int(f.readline()))

for i in range(1, n + 1):
    ps[i] = ps[i - 1] + seq[i - 1]

print(ps)
left, counter = 0, 0
while left < n:
    while right < n and ps[rightZ] - ps[left] < k:
        right += 1
    if ps[right] - ps[left] == k:
        cnt += 1
    left += 1

print(cnt)

3)
f = open('27.txt')
k = int(input())
n = int(input())
seq = []
cnt = 0

for j in range(n):
    seq.append(int(f.readline()))
seq.sort(reverse=True)
left = 0
right = n - 1
while right >= left:
    while seq[right] + seq[left] < k:
        right += 1
    cnt += right - left
    left += 1
print(cnt)
